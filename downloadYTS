#! /bin/bash

QUALITY="$1"	# 3D, 1080p, 720p
URL="$2"
#MOVIES_DIR="/mnt/media/dlna/movies/$QUALITY"
MOVIES_DIR="/mnt/media/dlna/movies"

cd /tmp

function failure() {
	echo " FAILED"
	exit 1
}

function addTorrent() {
	echo -en "Adding ${movieFileWithoutExtension} to the transmission download list..."
	#if transmission-remote localhost -n 'luiz:SmallPi1!' --no-start-paused -a "_torrent.torrent" -w "${movieDir}" &>/dev/null; then
	if transmission-remote localhost -n 'luiz:SmallPi1!' --no-start-paused -a "_torrent.torrent" &>/dev/null; then
		echo " OK"
		echo -en "\t --> remove unwanted files from the download:\n"
		echo -en "\t 1) Waiting a little...\n"
		sleep 0.1
		echo -en "\t 2) Removing unwanted files: 0.27k's .srt and all .jpg's...\n"
		torrentId=`transmission-remote localhost -n 'luiz:SmallPi1!' -l | grep -F "${directory}" | sed 's| *\([0-9]*\) .*|\1|'` &&
		echo -en "\t\t 2.1) found torrent #${torrentId}\n" &&
		excludedFiles=$(echo `transmission-remote localhost -n 'luiz:SmallPi1!' -t ${torrentId} -f | grep -E '\.jpg|0\.27 kB' | sed 's|:.*||'` | sed 's| |,|') &&
		echo -en "\t\t 2.2) excluded files list is: [${excludedFiles}]\n" &&
		echo -en "\t 3) Executing..." &&
		transmission-remote localhost -n 'luiz:SmallPi1!' -t ${torrentId} -G${excludedFiles} &>/dev/null &&
		echo " OK" || failure
	else
		failure
	fi

	# clean
	rm -f movie.html subtitles.html _torrent.torrent zip.zip
}

echo -en "Fetching torrent info..."
curl "$URL" >movie.html 2>/dev/null && echo " OK" || failure

# get the torrent file URL
#torrentURL=`cat movie.html | lua -e "QUALITY='$QUALITY';"'a=io.read("*a") a:gsub([[<a href="([^"]*)"[^>]*>]]..QUALITY..[[</a>]], print)'`
torrentURL=`lua -e "QUALITY='$QUALITY';"'a=io.read("*a") a:gsub([[<a href="([^"]*)"[^>]*>]]..QUALITY..[[[^<]*</a>]], print)' < movie.html | head -n 1`

# get torrent directory & file name information
echo -en "Downloading torrent file..."
wget -O "_torrent.torrent" "$torrentURL" &>/dev/null && echo " OK" || failure
directory=`transmission-show _torrent.torrent | grep -Ei "\.mp4|\.mkv" | sed 's|\s*\([^/]*\)/.*|\1|'`
movieFileWithoutExtension=`transmission-show _torrent.torrent | grep -Ei "\.mp4|\.mkv" | sed 's|.*/\(.*\)\.[Mm][KkPp][Vv4].*|\1|'`

# find the subtitles urls
subtitlesPage=`lua -e 'a=io.read("*a") a:gsub([[<div class="tech%-spec%-info.*<a href="([^"]*)"[^>]*>Subtitles</a>]], print)' < movie.html`
echo -en "\tApplying temporary subtitle URL fix... ${subtitlesPage} --> "
subtitlesPage="${subtitlesPage//http:\/\/www.yifysubtitles.com/https:\/\/yts-subs.com}"; echo " ${subtitlesPage}: OK"	# temporary fix -- yifysubtitles.com is currently out
echo -en "Downloading subtitles page..."
curl "$subtitlesPage" >subtitles.html 2>/dev/null && echo " OK" || (echo " ERROR --> Downloading the torrent with original subs"; addTorrent; exit 0)
englishSubRelativeLink=`cat subtitles.html | lua -e 'a=io.read("*a") a:gsub([[<a href="([^"]*english[^"]*)">]], print)' | head -n 1`
brazilianSubRelativeLink=`cat subtitles.html | lua -e 'a=io.read("*a") a:gsub([[<a href="([^"]*brazilian[^"]*)">]], print)' | head -n 1`

# download subtitles
echo -en "Downloading english subtitles..."
URL="http://www.yifysubtitles.com/${englishSubRelativeLink/\/subtitles/subtitle}.zip"
wget -O zip.zip "$URL" &>/dev/null && echo " OK" && unzip -p zip.zip '*.srt' >en.srt || echo " NO ENGLISH SUBS??"
echo -en "Downloading brazilian subtitles..."
URL="http://www.yifysubtitles.com/${brazilianSubRelativeLink/\/subtitles/subtitle}.zip"
wget -O zip.zip "$URL" &>/dev/null && echo " OK" && unzip -p zip.zip '*.srt' >br.srt || echo " NO BRAZILIAN SUBS"

movieDir="${MOVIES_DIR}/$directory"

# place subtitles
mkdir -p "${movieDir}"
chown -fR transmission.transmission "${movieDir}"
mv en.srt br.srt "${movieDir}"

addTorrent
